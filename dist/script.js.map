{"version":3,"sources":["script.js"],"names":["lettersPattern","currentGuessCount","currentGuess","document","querySelector","words","solutionWord","chooseWord","randomItem","Math","floor","random","length","addEventListener","event","keypress","key","test","dataset","letters","updateLetters","deleteFromLetters","submitGuess","_loop","i","setTimeout","revealTile","checkLetter","checkIfGuessComplete","checkWin","jumpTiles","_loop2","classList","add","showSolution","alert","letter","newLetters","currentTile","updateTiles","tileNumber","innerText","oldLetters","slice","deleteFromTiles","remove","position","guessedLetter","charAt","checkLetterExists","includes","state","flipTile","tile"],"mappings":"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","file":"script.js","sourcesContent":["const lettersPattern = /[a-z]/;\r\nlet currentGuessCount = 1;\r\nlet currentGuess = document.querySelector('#guess' + currentGuessCount);\r\nlet words = ['apple','baker','store','horse','speak','clone','bread'];\r\nlet solutionWord = '';\r\nconst chooseWord = () => {\r\n     let randomItem = Math.floor(Math.random() * (words.length - 1)) + 1;\r\n     solutionWord = words[randomItem];\r\n};\r\nchooseWord();\r\ndocument.addEventListener('keydown',(event) => {\r\n     let keypress = event.key;\r\n     if(currentGuessCount < 7){\r\n          if (keypress.length == 1 && lettersPattern.test(event.key) && currentGuess.dataset.letters.length < 5){\r\n               updateLetters(keypress);\r\n          }else if(event.key == 'Backspace' && currentGuess.dataset.letters != \"\"){\r\n               deleteFromLetters();\r\n          }else if(event.key == 'Enter' && currentGuess.dataset.letters.length == 5){\r\n               submitGuess();\r\n          }\r\n     }\r\n});\r\nconst submitGuess = () => {\r\n     for (let i = 0;i < 5;i++){\r\n          setTimeout(() => {\r\n               revealTile(i,checkLetter(i));\r\n          },i * 200);\r\n     }\r\n};\r\nconst checkIfGuessComplete = (i) => {\r\n     if (i == 4) {\r\n          checkWin();\r\n     }\r\n};\r\nconst jumpTiles = () => {\r\n     for(let i = 0;i < 5;i++){\r\n          setTimeout(() => {\r\n               let currentTile = document.querySelector('#guess' + currentGuessCount + 'Tile' + (i + 1));\r\n               currentTile.classList.add('jump');\r\n          },i * 200);\r\n     }\r\n};\r\nconst checkWin = () => {\r\n     if(solutionWord == currentGuess.dataset.letters){\r\n          setTimeout(() => {\r\n               jumpTiles();\r\n          },500);\r\n     }else{\r\n          currentGuessCount = currentGuessCount + 1;\r\n          currentGuess = document.querySelector('#guess' + currentGuessCount);\r\n          if(currentGuessCount == 7){\r\n               setTimeout(() => {\r\n                    showSolution();\r\n               },500);\r\n          }\r\n     }\r\n};\r\nconst showSolution = () => {\r\n     alert('Better Luck Next Time. The Solution was: ' + solutionWord);\r\n};\r\nconst updateLetters = (letter) => {\r\n     let oldLetters = currentGuess.dataset.letters;\r\n     let newLetters = oldLetters + letter;\r\n     let currentTile = newLetters.length;\r\n     currentGuess.dataset.letters = newLetters;\r\n     updateTiles(currentTile,letter);\r\n};\r\nconst updateTiles = (tileNumber,letter) => {\r\n     let currentTile = document.querySelector('#guess' + currentGuessCount + 'Tile' + tileNumber);\r\n     currentTile.innerText = letter;\r\n     currentTile.classList.add('has-letter');\r\n};\r\nconst deleteFromLetters = () => {\r\n     let oldLetters = currentGuess.dataset.letters;\r\n     let newLetters = oldLetters.slice(0,-1);\r\n     currentGuess.dataset.letters = newLetters;\r\n     deleteFromTiles(oldLetters.length);\r\n};\r\nconst deleteFromTiles = (tileNumber) => {\r\n     let currentTile = document.querySelector('#guess' + currentGuessCount + 'Tile' + tileNumber);\r\n     currentTile.innerText = \"\";\r\n     currentTile.classList.remove('has-letter');\r\n};\r\nconst checkLetter = (position) => {\r\n     let guessedLetter = currentGuess.dataset.letters.charAt(position);\r\n     let solutionLetter = solutionWord.charAt(position);\r\n     if(guessedLetter == solutionLetter){\r\n          return 'correct';\r\n     }\r\n     else {\r\n          return checkLetterExists(guessedLetter) ? 'present' : 'absent';\r\n     }\r\n};\r\nconst checkLetterExists = (letter) => {\r\n     return solutionWord.includes(letter);\r\n};\r\nconst revealTile = (i,state) => {\r\n     let tileNum = i + 1;\r\n     flipTile(tileNum,state);\r\n     checkIfGuessComplete(i);\r\n};\r\nconst flipTile = (tileNumber,state) => {\r\n     let tile = document.querySelector('#guess' + currentGuessCount + 'Tile' + tileNumber);\r\n     tile.classList.add('flip-in');\r\n     setTimeout(() => {\r\n          tile.classList.add(state);\r\n     },250);\r\n     setTimeout(() => {\r\n          tile.classList.remove('flip-in');\r\n          tile.classList.add('flip-out');\r\n     },250);\r\n     setTimeout(() => {\r\n          tile.classList.remove('flip-out');\r\n     },1500);\r\n};"]}